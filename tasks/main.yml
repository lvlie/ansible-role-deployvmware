---
# tasks file for ansible-role-deployvmware
#- name: Check if VM exists yet
#  vmware_guest_find:
#    hostname: "{{ vcenter_hostname }}"
#    username: "{{ vcenter_username }}"
#    password: "{{ vcenter_password }}"
#    validate_certs: no
#    name: '{{ inventory_hostname }}'
#  delegate_to: localhost
#  failed_when: false
#  register: vm

- name: Download latest ubuntu 20.04 ova
  get_url:
    url: https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.ova
    dest: ~/Downloads/ubuntu-focal.ova
  delegate_to: localhost
  when: vm.folders is not defined

#- name: Remove old template
#  vmware_guest:
#    hostname: "{{ vcenter_hostname }}"
#    username: "{{ vcenter_username }}"
#    password: "{{ vcenter_password }}"
#    validate_certs: no
#    name: '{{ template }}'
#    state: absent
#  delegate_to: localhost

- name: Deploy template to ESXi
  vmware_deploy_ovf:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    datastore: '{{ vcenter_datastore }}'
    name: '{{ inventory_hostname }}'
    power_on: no
    ovf: ~/Downloads/ubuntu-focal.ova
  delegate_to: localhost
  when: vm.folders is not defined

- name: Customize VM
  vmware_guest:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: no
    esxi_hostname: '{{ esxi_hostname }}'
    datacenter: '{{ vcenter_datacenter }}'
    folder: '{{ vcenter_folder }}'
    name: '{{ inventory_hostname }}'
    state: poweredon
    guest_id: '{{ id }}'
    disk:
    - size_gb: "{{ additional_disk_size }}"
      type: "{{ additional_disk_type }}"
      datastore: '{{ vcenter_datastore }}'
    networks:
    - name: '{{ network }}'
      type: static
      ip: '{{ ansible_host }}'
      netmask: '{{ netmask }}'
      gateway: '{{ gateway }}'
      dns_servers:
      - '{{ dns_server }}'
    hardware:
      memory_mb: '{{ memory }}'
      num_cpus: '{{ vcpu }}'
    customization:
      dns_servers:
      - '{{ dns_server }}'
      domain : '{{ domain_name }}'
      hostname: '{{ inventory_hostname }}'
#    template: '{{ template }}'
    wait_for_ip_address: yes
  delegate_to: localhost